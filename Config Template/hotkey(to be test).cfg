

#####################################
#           INSTRUCTIONS            #
#####################################
# 
# The Voron Hotkey board commes pre-flashed. So you don´t have to compile and upload any firmware to the board.
#
# How to use all this stuff:
#
#     1.  Copy this .cfg file into your Klipper config directory and then add [include Hotkey.cfg]
#         to the top of your printer.cfg in order to register the MCU, LEDs and macros with Klipper.
#
#     2.  If you installed the Stealthburner as well and want to get the "STATUS_ERROR" state transmitted to the hotkey button PCB,
#         you have to replace the "STATUS_ERROR" Macro in your stealthburner_leds.cfg with this without the "#":
#
#[gcode_macro status_error]
#gcode:
#    STATUS_ERROR_HOTKEY
#    _set_sb_leds_by_name leds="logo" color="error" transmit=0
#    _set_sb_leds_by_name leds="nozzle" color="error" transmit=1
#
#     3.  Connect the PCB via USB to your RaspberryPi and SSH to your Pi
#
#     4.  Get the Serial ID of the PCB with "ls /dev/serial/by-id/*". Usualy it´s like usb-Klipper_rp2040_xxx
#
#     5.  Replace the serial under the [mcu hotkey] section with your id
#
#     6.  Save your config and restart Klipper.
#

#####################################
#           User Config             #
#####################################

[mcu hotkey]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66058919F365C30-if00 
restart_method: command

[idle_timeout]
gcode:
  status_standby_hotkey
timeout: 1800

#####################################
#           Macro Config            #
#####################################
#
# All of the buttons are configured with macros.
# Some of them are self-made, like the PREHEAT and CLEAN_NOZZLE and will not work at the beginning.
# In order to get them work, you have to define them in your config.
# Please refer to https://www.klipper3d.org/Config_Reference.html?h=macro#g-code-macros-and-events
#

[gcode_macro _BUTTON_B1]
# EMERGENCY STOP
gcode:
  _status_button_busy BUTTON=1
  M112
  _status_button_ready BUTTON=1

[gcode_macro _BUTTON_B2]
# Go to service position
gcode:
  _status_button_busy BUTTON=2
  G0 X175 Y50 Z50 F18000
  _status_button_ready BUTTON=2

[gcode_macro _BUTTON_B3]
# Clean Nozzle
gcode:
  _status_button_busy BUTTON=3
  CLEAN_NOZZLE
  _status_button_ready BUTTON=3

[gcode_macro _BUTTON_B4]
#Homing All
gcode:
  _status_button_busy BUTTON=4
  G28
  _status_button_ready BUTTON=4

[gcode_macro _BUTTON_B5]
#Preheat
gcode:
  _status_button_busy BUTTON=5
  PREHEAT
  _status_button_ready BUTTON=5

[gcode_macro _BUTTON_B6]
#Unload Filament
gcode:
  _status_button_busy BUTTON=6
  UNLOAD_FILAMENT
  _status_button_ready BUTTON=6

[gcode_macro _BUTTON_B7]
#Load Filament
gcode:
  _status_button_busy BUTTON=7
  LOAD_FILAMENT
  _status_button_ready BUTTON=7 


[gcode_macro _BUTTON_B7]
#Cancel Printing
gcode:
  _status_button_busy BUTTON=7
  CANCEL_PRINT
  _status_button_ready BUTTON=7 


[gcode_macro _BUTTON_B5]
#Rause Printing
gcode:
  _status_button_busy BUTTON=8
  PAUSE
  _status_button_ready BUTTON=8

[gcode_macro _BUTTON_B6]
#Resume Printing
gcode:
  _status_button_busy BUTTON=9
  RESUME
  _status_button_ready BUTTON=9

[gcode_macro _BUTTON_B7]
#Home X
gcode:
  _status_button_busy BUTTON=10
  G28 X 
  _status_button_ready BUTTON=10 


[gcode_macro _BUTTON_B7]
#Home Y
gcode:
  _status_button_busy BUTTON=11
  G28 Y 
  _status_button_ready BUTTON=11


[gcode_macro _BUTTON_B7]
#Home Z
gcode:
  _status_button_busy BUTTON=12
  G28 Z 
  _status_button_ready BUTTON=12



# Config for the hotkey button LEDs
[neopixel hotkey_leds]
pin: hotkey: gpio29
chain_count: 24
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

# Settings for the Buttons
[gcode_button b1]
pin: ^!hotkey: gpio2
press_gcode: _BUTTON_B1

[gcode_button b2]
pin: ^!hotkey: gpio3
press_gcode: _BUTTON_B2

[gcode_button b3]
pin: ^!hotkey: gpio4
press_gcode: _BUTTON_B3

[gcode_button b4]
pin: ^!hotkey: gpio5
press_gcode: _BUTTON_B4

[gcode_button b5]
pin: ^!hotkey: gpio6
press_gcode: _BUTTON_B5

[gcode_button b6]
pin: ^!hotkey: gpio7
press_gcode: _BUTTON_B6

[gcode_button b7]
pin: ^!hotkey: gpio8
press_gcode: _BUTTON_B7

[gcode_button b8]
pin: ^!hotkey: gpio9
press_gcode: _BUTTON_B8

[gcode_button b9]
pin: ^!hotkey: gpio10
press_gcode: _BUTTON_B9

[gcode_button b10]
pin: ^!hotkey: gpio11
press_gcode: _BUTTON_B10

[gcode_button b11]
pin: ^!hotkey: gpio12
press_gcode: _BUTTON_B11

[gcode_button b12]
pin: ^!hotkey: gpio13
press_gcode: _BUTTON_B12



#####################################
#           Color Config            #
#####################################

[gcode_macro _hotkey_vars]
# User settings for the hotkey Button status leds. You can change the status colors and led
# configurations for all 12 buttons here.
variable_colors: {
        'b1': { # Colors for b1 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.2, 'g': 0.0, 'b': 0.0},
        },
        'b2': { # Colors for b2 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b3': { # Colors for b3 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b4': { # Colors for b4 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b5': { # Colors for b5 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b6': { # Colors for b6 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b7': { # Colors for b7 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b8': { # Colors for b4 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b9': { # Colors for b5 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b10': { # Colors for b6 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b11': { # Colors for b7 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b12': { # Colors for b7 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},  
        },
    }
variable_b1_led_name:         "hotkey_leds" 
variable_b1_idx:              "1,2" 
variable_b2_led_name:         "hotkey_leds" 
variable_b2_idx:              "3,4" 
variable_b3_led_name:         "hotkey_leds" 
variable_b3_idx:              "5,6" 
variable_b4_led_name:         "hotkey_leds" 
variable_b4_idx:              "7,8" 
variable_b5_led_name:         "hotkey_leds" 
variable_b5_idx:              "9,10" 
variable_b6_led_name:         "hotkey_leds" 
variable_b6_idx:              "11,12" 
variable_b7_led_name:         "hotkey_leds" 
variable_b7_idx:              "13,14" 
variable_b8_led_name:         "hotkey_leds" 
variable_b8_idx:              "15,16" 
variable_b9_led_name:         "hotkey_leds" 
variable_b9_idx:              "17,18" 
variable_b10_led_name:        "hotkey_leds" 
variable_b10_idx:             "19,20" 
variable_b11_led_name:        "hotkey_leds" 
variable_b11_idx:             "21,22" 
variable_b12_led_name:        "hotkey_leds" 
variable_b12_idx:             "23,24" 


#####################################
#     Custom Neopixel Gcode         #
#####################################


gcode:
    # This section is required.  Do Not Delete.
    # Don't change anything unless you know what you are doing 

[gcode_macro _set_hotkey_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_hotkey_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _hotkey_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _hotkey_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _hotkey_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_b1_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotkey_vars"].b1_led_name %}
    {% set idx = printer["gcode_macro _hotkey_vars"].b1_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_b2_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotkey_vars"].b2_led_name %}
    {% set idx = printer["gcode_macro _hotkey_vars"].b2_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _status_button_busy]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="busy" transmit=1


[gcode_macro _status_button_standby]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="standby" transmit=1

[gcode_macro _status_button_ready]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="ready" transmit=1

[gcode_macro _status_button_error]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="error" transmit=1

[gcode_macro status_printing_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="printing" transmit={transmit}
        {% endif %}
    {% endfor %}

[gcode_macro status_error_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="error" transmit={transmit}
        {% endif %}
    {% endfor %}

[gcode_macro status_standby_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="standby" transmit={transmit}
        {% endif %}
    {% endfor %}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set wipe_count = 8 %}
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z15 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(275, 4),(235, 4)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z9.7 F12000
    {% endfor %}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=clean_nozzle_state


[gcode_macro SET_BED_TEMPERATURE]
gcode:
  {% set bed_temp = params.TEMPERATURE|default(40)|float %}
  M140 S{bed_temp}

